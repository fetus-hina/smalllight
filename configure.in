AC_PREREQ(2.59)
AC_INIT(mod_small_light, 1.1.1)

AC_PROG_CC

# apxs
AC_ARG_WITH(
    apxs,
    AC_HELP_STRING([--with-apxs=FILE], [location of the apxs program]),
    [if test -x $withval; then
        APXS=$withval
        AC_SUBST(APXS)
    else
        AC_MSG_ERROR([apxs not found])
    fi],
    AC_MSG_ERROR([--with-apxs option must be specified])
)

# imlib2
AC_MSG_CHECKING(whether to enable imlib2 support)
AC_ARG_WITH(
    imlib2,
    AC_HELP_STRING([--without-imlib2], [disable imlib2 support]),
    ENABLE_IMLIB2=$withval,
    ENABLE_IMLIB2="auto"
)
AC_MSG_RESULT($ENABLE_IMLIB2)

if test "$ENABLE_IMLIB2" != "no"; then
    AC_ARG_WITH(
        imlib2-config,
        AC_HELP_STRING([--with-imlib2-config=FILE], [location of the imlib2-config program]),
        [if test -x $withval; then
            IMLIB2_CONFIG=$withval
        else
            AC_MSG_ERROR([imlib2-config not found])
        fi]
    )
    if test "$IMLIB2_CONFIG" = ""; then
        AC_PATH_PROG(
            IMLIB2_CONFIG,
            imlib2-config,
            [],
            /bin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin
        )
        if test "$IMLIB2_CONFIG" = ""; then
            AC_MSG_ERROR([imlib2 not found])
        fi
    fi
    AC_SUBST(IMLIB2_CONFIG)
    CFLAGS_IMLIB2="-DENABLE_IMLIB2"
    AC_SUBST(CFLAGS_IMLIB2)
fi

# ImageMagick
AC_MSG_CHECKING(whether to enable Wand support)
AC_ARG_WITH(
    Wand,
    AC_HELP_STRING([--without-Wand], [disable Wand support]),
    ENABLE_WAND=$withval,
    ENABLE_WAND="auto"
)
AC_MSG_RESULT($ENABLE_WAND)

if test "$ENABLE_WAND" != "no"; then
    AC_ARG_WITH(
        Wand-config,
        AC_HELP_STRING([--with-Wand-config=FILE], [location of the Wand-config program]),
        [if test -x $withval; then
            WAND_CONFIG=$withval
        else
            AC_MSG_ERROR([Wand-config not found])
        fi]
    )
    if test "$WAND_CONFIG" = ""; then
        AC_PATH_PROG(
            WAND_CONFIG,
            Wand-config,
            [],
            /bin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin
        )
        if test "$WAND_CONFIG" = ""; then
            AC_MSG_ERROR([Wand not found])
        fi
    fi
    AC_SUBST(WAND_CONFIG)
    CFLAGS_WAND="-DENABLE_WAND"
    AC_SUBST(CFLAGS_WAND)
fi

# libjpeg
AC_MSG_CHECKING(whether to enable jpeg support)
AC_ARG_WITH(
    jpeg,
    AC_HELP_STRING([--without-jpeg], [disable jpeg support]),
    ENABLE_JPEG=$withval,
    ENABLE_JPEG="auto"
)
AC_MSG_RESULT($ENABLE_JPEG)

if test "$ENABLE_JPEG" != "no"; then
    HAVE_JPEG=yes
    AC_CHECK_HEADER(
        jpeglib.h,
        [],
        [HAVE_JPEG="no"]
    )
    AC_CHECK_LIB(
        jpeg, jpeg_start_compress,
        [],
        [HAVE_JPEG="no"]
    )
    if test "$ENABLE_JPEG" != "auto" && test "$HAVE_JPEG" = "no"; then
        AC_MSG_ERROR([libjpeg not found])
    fi
    if test "$HAVE_JPEG" = "yes"; then
        CFLAGS_JPEG="-DENABLE_JPEG"
        AC_SUBST(CFLAGS_JPEG)
        LIBS_JPEG="-ljpeg"
        AC_SUBST(LIBS_JPEG)
    fi
fi

# webp
AC_MSG_CHECKING(whether to enable webp support)
AC_ARG_WITH(
    webp,
    AC_HELP_STRING([--without-webp], [disable webp support]),
    ENABLE_WEBP=$withval,
    ENABLE_WEBP="auto"
)
AC_MSG_RESULT($ENABLE_WEBP)

if test "$ENABLE_WEBP" != "no"; then
    HAVE_WEBP=yes
    AC_CHECK_HEADER(
        webp/encode.h,
        [],
        [HAVE_WEBP="no"]
    )
    AC_CHECK_LIB(
        webp, WebPEncodeRGBA,
        [],
        [HAVE_WEBP="no"]
    )
    if test "$ENABLE_WEBP" != "auto" && test "$HAVE_WEBP" = "no"; then
        AC_MSG_ERROR([libwebp not found])
    fi
    if test "$HAVE_WEBP" = "yes"; then
        CFLAGS_WEBP="-DENABLE_WEBP"
        AC_SUBST(CFLAGS_WEBP)
        LIBS_JPEG="-lwebp"
        AC_SUBST(LIBS_WEBP)
    fi
fi

AC_OUTPUT(Makefile)

